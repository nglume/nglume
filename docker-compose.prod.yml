# Production configuration (!untested!) Same as QA, minus database containers as they are handled outside of the container
#  ecosystem.

spira:
  image: spira/spira:%spira_container_tag%
  volumes:
    - /data

logviewer:
  extends:
    file: ./docker/common-services.yml
    service: logviewer
  volumes_from:
    - spira

cache:
  extends:
    file: ./docker/common-services.yml
    service: cache

elasticsearch:
  extends:
    file: ./docker/common-services.yml
    service: elasticsearch

queue:
  extends:
    file: ./docker/common-services.yml
    service: queue

queuerunner:
  extends:
    file: ./docker/common-services.yml
    service: queuerunner
  links:
    - mailcatcher:mailcatcher
    - queue:queue
    - cache:cache
    - web:web
  volumes_from:
    - spira

mailcatcher:
  extends:
    file: ./docker/common-services.yml
    service: mailcatcher

php:
  extends:
    file: ./docker/common-services.yml
    service: php
  links:
    - cache:cache
    - queue:queue
    - mailcatcher:mailcatcher
    - elasticsearch:elasticsearch
  volumes_from:
    - spira

web:
  extends:
    file: ./docker/common-services.yml
    service: web
  ports:
    - "80:80" # for Production we only expose port 80 as the web container (nginx) handles port mapping itself with proxies
  links:
    - php:php
    - logviewer:logviewer
    - mailcatcher:mailcatcher
    - apimock:apimock
  volumes_from:
    - spira

devtools:
  extends:
    file: ./docker/common-services.yml
    service: devtools
  links:
    - web:web
    - mailcatcher:mailcatcher
    - cache:cache
    - queue:queue
  volumes_from:
    - spira

apimock:
  extends:
    file: ./docker/common-services.yml
    service: apimock
  volumes_from:
    - spira