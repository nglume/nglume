# Group Articles
Articles are the generic posts/blogs of the system, they are used to display static CMS content.

## Article Collection [/articles]
The collection of all article posts.

### Retrieve all articles [GET]
Note that this route returns paginated results as defined in the `Content-Range` headers

#### Restrictions
* Published - Allowed - [all]
* Unpublished - Allowed - [admin, self]
+ Request
    + Headers

            Range: entities=0-

+ Response 200 (application/json)

    + Headers

            Accept-Ranges: entities
            Content-Range: entities 0-9/200

    + Body

            {!!
                $factory->get(\App\Models\Article::class)
                    ->setTransformer(App\Http\Transformers\ArticleTransformer::class)
                    ->count(10)
                    ->json()
            !!}


## Article Entity [/articles/{articleId}]

+ Parameters
    + articleId (required, uuid, `{!! $faker->uuid !!}`) ... Unique `id` or `uri` of the article to perform action with.


### Retrieve an article [GET]

#### Restrictions
* Published - Allowed - [all]
* Unpublished - Allowed - [admin, self]
+ Response 200 (application/json)

    + Body

            {!! $factory->json(\App\Models\Article::class) !!}

### Create/update article entity [PUT]

#### Restrictions
* Allowed - [admin, self]

+ Request
    + Body

            {!! $factory->json(\App\Models\Article::class) !!}

+ Response 201

### Update the article [PATCH]

#### Restrictions
* Allowed - [admin, self]

+ Request
    + Body

            {!!
                $factory->get(\App\Models\Article::class)
                    ->hide(['_self'])
                    ->showOnly(['content'])
                    ->json()
            !!}


+ Response 204


### Delete the article [DELETE]
#### Restrictions
* Allowed - [admin, self]

+ Response 204

@include('documentation.sections.article.sections')
@include('documentation.sections.article.permalinks')
@include('documentation.sections.article.meta')
@include('documentation.sections.article.tags')
@include('documentation.sections.article.comments')
@include('documentation.sections.article.changelog')


